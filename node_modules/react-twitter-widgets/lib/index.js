"use strict";

exports.__esModule = true;
exports.Tweet = exports.Timeline = exports.Share = exports.Mention = exports.Hashtag = exports.Follow = exports.eagerLoadTwitterLibrary = void 0;

var _react = _interopRequireWildcard(require("react"));

var _utils = require("./utils");

exports.eagerLoadTwitterLibrary = _utils.loadTwitterLibrary;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var childDivIdentifyingAttribute = "twdiv";

function useTwitterWidget(factoryFunctionName, primaryArg, options, onLoad) {
  var _useState = (0, _react.useState)(null),
      error = _useState[0],
      setError = _useState[1];

  var ref = (0, _react.useRef)(null); // noop if ssr

  if (!_utils.canUseDOM) {
    return {
      ref: ref,
      error: error
    };
  } // Make deps for useEffect.
  // options, and possibly primaryArg, are objects that should be compared (shallow).
  // There currently aren't any nested arrays or objects, so they
  // can be cloned in a shallow manner.
  // NOTE onLoad is used in useCallback, but it is not listed as a dependency.
  // Listing it would likely cause unnecessary loads. The latest onLoad should be
  // used regardless, since it will not be called unless the other dependencies
  // change, so it works out.


  var deps = [factoryFunctionName, (0, _utils.useShallowCompareMemoize)(primaryArg), (0, _utils.useShallowCompareMemoize)(options)];
  (0, _react.useEffect)(function () {
    // Reset error
    setError(null); // Protect against race conditions
    // (set to true in cleanup function;
    // checked if canceled in async loadWidget)

    var isCanceled = false;

    if (ref.current) {
      (0, _utils.removeChildrenWithAttribute)(ref.current, childDivIdentifyingAttribute);

      if (!ref || !ref.current) {
        return;
      }

      var childEl = document.createElement("div");
      childEl.setAttribute(childDivIdentifyingAttribute, "yes");
      ref.current.appendChild(childEl);
      (0, _utils.twWidgetFactory)().then(function (wf) {
        // primaryArg (possibly an object) and options must be cloned
        // since twitter mutates them (gah!).
        // There currently aren't any nested arrays or objects, so they
        // can be cloned in a shallow manner.
        return wf[factoryFunctionName]((0, _utils.cloneShallow)(primaryArg), childEl, (0, _utils.cloneShallow)(options));
      }).then(function (resultMaybe) {
        // Twitter returns undefined if widget creation fails.
        // However, if deps are stale (isCanceled), suppress error (likely race condition).
        if (!resultMaybe && !isCanceled) {
          throw new Error("Twitter could not create widget. If it is a Timeline or " + "Tweet, ensure the screenName/tweetId exists.");
        }

        if (!ref || !ref.current) {
          return;
        }

        if (isCanceled) {
          if (childEl) {
            childEl.remove();
          }

          return;
        }

        if (onLoad) {
          onLoad();
        }
      })["catch"](function (e) {
        console.error(e);
        setError(e);
      });
    }

    return function () {
      isCanceled = true;
    };
  }, deps);
  return {
    ref: ref,
    error: error
  };
}

var Follow = function Follow(_ref) {
  var username = _ref.username,
      options = _ref.options,
      onLoad = _ref.onLoad,
      renderError = _ref.renderError;

  var _useTwitterWidget = useTwitterWidget("createFollowButton", username, options, onLoad),
      ref = _useTwitterWidget.ref,
      error = _useTwitterWidget.error;

  return /*#__PURE__*/_react["default"].createElement("div", {
    ref: ref
  }, error && renderError && renderError(error));
};

exports.Follow = Follow;

var Hashtag = function Hashtag(_ref2) {
  var hashtag = _ref2.hashtag,
      options = _ref2.options,
      onLoad = _ref2.onLoad,
      renderError = _ref2.renderError;

  var _useTwitterWidget2 = useTwitterWidget("createHashtagButton", hashtag, options, onLoad),
      ref = _useTwitterWidget2.ref,
      error = _useTwitterWidget2.error;

  return /*#__PURE__*/_react["default"].createElement("div", {
    ref: ref
  }, error && renderError && renderError(error));
};

exports.Hashtag = Hashtag;

var Mention = function Mention(_ref3) {
  var username = _ref3.username,
      options = _ref3.options,
      onLoad = _ref3.onLoad,
      renderError = _ref3.renderError;

  var _useTwitterWidget3 = useTwitterWidget("createMentionButton", username, options, onLoad),
      ref = _useTwitterWidget3.ref,
      error = _useTwitterWidget3.error;

  return /*#__PURE__*/_react["default"].createElement("div", {
    ref: ref
  }, error && renderError && renderError(error));
};

exports.Mention = Mention;

var Share = function Share(_ref4) {
  var url = _ref4.url,
      options = _ref4.options,
      onLoad = _ref4.onLoad,
      renderError = _ref4.renderError;

  var _useTwitterWidget4 = useTwitterWidget("createShareButton", url, options, onLoad),
      ref = _useTwitterWidget4.ref,
      error = _useTwitterWidget4.error;

  return /*#__PURE__*/_react["default"].createElement("div", {
    ref: ref
  }, error && renderError && renderError(error));
};

exports.Share = Share;

var Timeline = function Timeline(_ref5) {
  var dataSource = _ref5.dataSource,
      options = _ref5.options,
      onLoad = _ref5.onLoad,
      renderError = _ref5.renderError;

  var _useTwitterWidget5 = useTwitterWidget("createTimeline", dataSource, options, onLoad),
      ref = _useTwitterWidget5.ref,
      error = _useTwitterWidget5.error;

  return /*#__PURE__*/_react["default"].createElement("div", {
    ref: ref
  }, error && renderError && renderError(error));
};

exports.Timeline = Timeline;

var Tweet = function Tweet(_ref6) {
  var tweetId = _ref6.tweetId,
      options = _ref6.options,
      onLoad = _ref6.onLoad,
      renderError = _ref6.renderError;

  var _useTwitterWidget6 = useTwitterWidget("createTweet", tweetId, options, onLoad),
      ref = _useTwitterWidget6.ref,
      error = _useTwitterWidget6.error;

  return /*#__PURE__*/_react["default"].createElement("div", {
    ref: ref
  }, error && renderError && renderError(error));
};

exports.Tweet = Tweet;